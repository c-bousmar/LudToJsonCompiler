{
    "define": {
        "ThenCaptures": "(then (remove (forEach (sites Around (sites Group at:(last To) \"GridDirection\" if:(is In (to) (sites Occupied by:Mover)) ) \"GridDirection\" if:(is Next (who at:(to))) ) if:(> (size Group at:(last To) \"GridDirection\" if:(is Mover (who at:(to)))) (size Group at:(site) \"GridDirection\" if:(is Next (who at:(to)))) ) ) (then (forEach Value (array (sites Around (sites Occupied by:Mover) \"GridDirection\" if:(is Next (who at:(to))))) (if (> (count Pieces in:(sites Group from:(sites Around (value) \"GridDirection\") \"GridDirection\" if:(is Mover (who at:(to))) ) ) (size Group at:(value) \"GridDirection\" if:(is Next (who at:(to)))) ) (remove (value)) ) ) ) ) )",
        "IsNeitherSelfAdjacentNorSuicide": "(and (not (is In (to) (sites Around (sites Occupied by:Mover) \"GridDirection\"))) (no Pieces Next in:(intersection (sites Around (to) \"GridDirection\") (sites Around (sites Occupied by:Next) \"GridDirection\") ) ) )",
        "IfAdjacentIsContactBetween2EqualChains": "(or (no Pieces in:(sites Around (to) \"GridDirection\")) (= (+ 1 (count Pieces in:(sites Group from:(sites Around (to) \"GridDirection\") \"GridDirection\" if:(is Mover (who at:(to))) ) ) ) (count Pieces in:(sites Group from:(sites Around (to) \"GridDirection\") \"GridDirection\" if:(is Next (who at:(to))) ) ) ) )",
        "SizeOfLargestGroupMover": "(max (sizes Group \"GridDirection\" Mover) )",
        "SizeOfLargestGroupNext": "(max (sizes Group \"GridDirection\" Next) )",
        "SizeOf2ndLargestGroupMover": "(max (difference (sizes Group \"GridDirection\" P2) \"SizeOfLargestGroupMover\" ) )",
        "FindSizeOfGroupIfLargerThanAny": "(set Var \"LargestMover\" (max (sizes Group \"GridDirection\" Mover)) (then (set Var \"LargestNext\" (max (sizes Group \"GridDirection\" Next)) (then (set Var \"SecondLargestMover\" (max (difference (sizes Group \"GridDirection\" Mover) (var \"LargestMover\") ) ) (then (set Var \"LargestUnique\" (if (and (> (var \"LargestMover\") (var \"LargestNext\") ) (> (var \"LargestMover\") (var \"SecondLargestMover\") )) (var \"LargestMover\") 0 ) ) ) ) ) ) ) )",
        "SitesAroundLargestChainIfOFMover": "(sites Around (forEach (sites Occupied by:Mover) if:(= (size Group at:(site) \"GridDirection\") (var \"LargestUnique\") ) ) \"GridDirection\" )",
        "RestrictededMergerSites": "(difference (intersection (sites Empty) (sites Around (difference (sites Occupied by:Mover) (from)) \"GridDirection\") ) (\"SitesAroundLargestChainIfOFMover\") )",
        "MergerSites": "(intersection (sites Empty) (sites Around (difference (sites Occupied by:Mover) (from)) \"GridDirection\") )",
        "GridDirection": "<BoardShape:directionsUsed>"
    },
    "game": "\"Chains of Thought\" (players 2) (equipment { (board <BoardShape:gridType> use:Vertex) (piece \"Disc\" Each) }) (rules (play (or (move Add (to (sites Empty) if:(<Variant:placement>) ) <GameOption:capture> ) (do (and { (set Var \"GroupCount\" (count Groups \"GridDirection\" if:(is Mover (who at:(to))))) <Movement:precheck> }) next:(forEach Piece (move Step \"GridDirection\" (to if:(is In (to) <Movement:limits> ) ) ) ) ifAfterwards:(and { (< (count Groups \"GridDirection\" if:(is Mover (who at:(to)))) (var \"GroupCount\")) (>= (size Group at:(last To) \"GridDirection\" if:(is Mover (who at:(to)))) (max (results from:(sites Around (last To) \"GridDirection\" if:(is Next (who at:(to)))) to:(from) (size Group at:(to) \"GridDirection\" if:(is Next (who at:(to)))) ) ) ) }) <GameOption:capture> ) <GameGoal:scoring> ) ) (end (if (no Moves Next) <GameGoal:goal>) ) ) ) (define \"SetScores\" (and (set Score P1 (max (difference (sizes Group \"GridDirection\" P1) (sizes Group \"GridDirection\" P2)))) (set Score P2 (max (difference (sizes Group \"GridDirection\" P2) (sizes Group \"GridDirection\" P1)))) )",
    "option": {},
    "rulesets": {},
    "metadata": "(info { (description \"Chains of Thought is a 2 player combinatorial game. Finite play is ensured by the limited available area for stone placement, and by the need, when removing stones from the board, to create a chain larger than the chain(s) from which stones were taken. The game ends when a player cannot move, but the goal is to have the largest chain at the end of play. The goal cascades for tied chains. Chains of similar size are capable of approaching and attacking each other, when supported by potential mergers from behind. The need for support causes such approaches to be cool. Blocking is generally done by chains of disparate size, as they mutually repel the isolated stones needed for the larger chain to attack the smaller. This is what leads to the territorial race by placing outliers into yet open areas for expansion. The result is a tactical cool clouding of stones, followed by an obstructive race to extend the largest viable group. Players must also be careful obstruct their own possibility of (re)connecting chains that have been formed separately, or been cut in an attack. The leading player may seek to stalemate himself if the opponent has potential for future expansion.\") (rules \"Goal: End with the largest chain of stones, the goal cascades to the next largest in the case of ties. A 'chain' is any set of player's stones that comprised of a starting stone and every stone which can be reached from it by a series steps between adjacent stones. Starting with an empty board, players alternate taking turns. A turn consists of either placing or moving a stone followed by removing opposing stones, if applicable. Placing: A friendly stone may be placed either: - 1) where there are no adjacent stones of either player, or - 2) where the number of stones in adjacent chains that belong to the opponent equal those that belong to the player including the stone to be placed. For example: A stone may be placed next to an opponent's 1-chain (isolated stone). Moving: B) A friendly stone may be moved one step to an empty site, but only if the number of chains on the board is reduced by merger and the merged chain becomes at least as large as every opponent's chain that it is adjacent to. Special movement restrictions: Pieces may not step to merge with a chain that is the larger than any other chain on the board. This restriction does not affect the placement rule. It also does not apply if more than one group is tied for largest. Removing stones: After placement or movement, the player removes every opponent's stone that is directly adjacent to a larger friendly chain than its own. When the turn is completed, only chains of equal size remain in contact. Ending the game: There is no passing. The game ends when either player is unable to move. Please also try the optional board grids. Choose smaller boards for a good AI experience and tactical game. Choose larger boards for a strategy game experience with other players. The other rule variants are only for experimentation.\") (id \"1965\") (version \"1.3.14\") (classification \"experimental\") (author \"Dale W. Walton\") (credit \"Dale W. Walton\") (date \"29-03-2022\") } ) (graphics { (player Colour P1 (colour 229 92 0)) (player Colour P2 (colour Cream)) (board Style Graph) (board StyleThickness InnerEdges .2) (board StyleThickness OuterEdges .2) (board StyleThickness InnerVertices .5) (show Edges Diagonal <BoardShape:DiagShow>) } ) (ai \"Chains of Thought_ai\" )"
}