{
    "define": {
        "PlayableHeight": "(results from:(sites Occupied by:#1) to:(sites Around (from)) (if (= (size Stack at:(from)) (size Stack at:(to))) (size Stack at:(from)) Infinity ) )",
        "SizesStack": "(results from:0 to:(sites Occupied by:#1) (size Stack at:(to)) )",
        "HighestStackCascading": "(max (difference (\"SizesStack\" #1) (\"SizesStack\" #2)) )",
        "ShowScore": "(if (!= (+ (score P1) (score P2)) -1) (max (score #1) 0) (if (= (score #1) 0) (max (\"SizesStack\" #1)) (- (max (\"SizesStack\" #1))) ) )"
    },
    "game": "\"Stairs\" (players 2) (equipment { (board (square <Board>)) (piece \"Square\" Each (move (from (sites Occupied by:Mover) if:(= (size Stack at:(from)) (min (\"PlayableHeight\" Mover))) ) (to (sites Around (from)) if:(= (size Stack at:(from)) (size Stack at:(to))) ) count:1 stack:True ) ) } ) (rules <Pie> (start { (place \"Square1\" (sites Phase 0)) (place \"Square2\" (sites Phase 1)) } ) (play (forEach Piece (then (if (or (= (\"HighestStackCascading\" P1 P2) (max (\"SizesStack\" P1))) (= (\"HighestStackCascading\" P2 P1) (max (\"SizesStack\" P2))) ) (and (set Score P1 (\"HighestStackCascading\" P1 P2)) (set Score P2 (\"HighestStackCascading\" P2 P1)) ) (if (or (= (score P1) (max (\"SizesStack\" P1))) (= (score P2) (max (\"SizesStack\" P2))) ) (and (set Score Mover -1) (set Score Next 0) ) ) ) ) ) ) (end (if (all Passed) (byScore) ) ) )",
    "option": {
        "Board Size": {
            "arguments": "<size>",
            "items": {
                "4": {
                    "content": "4",
                    "description": "Played on a size 4 board."
                },
                "6": {
                    "content": "6",
                    "description": "Played on a size 6 board."
                },
                "8": {
                    "content": "8",
                    "description": "Played on a size 8 board."
                }
            }
        },
        "Pie": {
            "arguments": "<type>",
            "items": {
                "On": {
                    "content": "(meta (swap))",
                    "description": "Pie:On."
                },
                "Off": {
                    "content": "",
                    "description": "Pie:Off."
                }
            }
        }
    },
    "rulesets": {},
    "metadata": "(info { (description \"Stairs is a stacking game consisting of a simple rule set. The goal is to place your piece higher than your opponent.\") (rules \"Stairs is a stacking game consisting of a simple rule set. The goal is to place your piece higher than your opponent. All the turn player has to do is basically move one of their pieces to the adjacent space. However, the player must move it to exactly one level higher than before the move. The player must also move the piece on the lowest stack that can be moved.\") (id \"4214\") (source \"<a href=\\\"https: (version \"1.3.14\") (classification \"board/race/reach\") (author \"Kanare Kato\") (credit \"Takuro Kawasaki\") (date \"2023\") } ) (graphics { (stackType DefaultAndCount 0.8) (show Score P1 (\"ShowScore\" P1)) (show Score P2 (\"ShowScore\" P2)) } )"
}