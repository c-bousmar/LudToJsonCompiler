{
    "define": {
        "Move": "(move (from (from) if:(> (state at:(from)) 1) ) (to (sites Distance (step Orthogonal (to if:(#1) ) ) from:(from) (range 1 (- #2 1)) ) if:(is Empty (to)) (apply (set State at:(from) #3) ) ) )",
        "HumanMove": "(or (\"Move\" (is In (to) \"HumanMoveSpots\") (state at:(from)) 1) (\"Move\" (is In (to) \"RestrictedHumanMoveSpots\") 2 1) )",
        "VehicleMove": "(or (\"Move\" (is In (to) \"VehicleMoveSpots\") (state at:(from)) #1) (\"Move\" (is In (to) \"RestrictedVehicleMoveSpots\") 2 #1) )",
        "AircraftMove": "(\"Move\" (is In (to) \"AircraftMoveSpots\") (state at:(from)) 1)",
        "BoatMove": "(\"Move\" (is In (to) \"BoatMoveSpots\") (state at:(from)) 1)",
        "ForbiddenSpotsHuman": "(sites \"DeepWater\")",
        "RestrictedSpotsHuman": "(sites \"Mountain\")",
        "HumanMoveSpots": "(difference (union (sites Empty) (sites Occupied by:Friend container:\"Board\")) (union (\"ForbiddenSpotsHuman\") (\"RestrictedSpotsHuman\")))",
        "RestrictedHumanMoveSpots": "(intersection (sites Empty) (\"RestrictedSpotsHuman\"))",
        "ForbiddenSpotsVehicle": "(union (sites \"Mountain\") (sites \"DeepWater\"))",
        "RestrictedSpotsVehicle": "(union (sites \"Forest\") (sites \"ShallowWater\"))",
        "VehicleMoveSpots": "(difference (union (sites Empty) (sites Occupied by:Friend container:\"Board\")) (union (\"ForbiddenSpotsVehicle\") (\"RestrictedSpotsVehicle\")))",
        "RestrictedVehicleMoveSpots": "(intersection (sites Empty) (\"RestrictedSpotsVehicle\"))",
        "AircraftMoveSpots": "(union (sites Empty) (sites Occupied by:Friend container:\"Board\"))",
        "ForbiddenSpotsBoat": "(union (sites \"Mountain\") (difference (sites Board) (union (sites \"ShallowWater\") (sites \"DeepWater\"))) )",
        "BoatMoveSpots": "(difference (union (sites Empty) (sites Occupied by:Friend container:\"Board\")) (\"ForbiddenSpotsBoat\") )",
        "GroundAttackFrom": "(is In (from) (sites Occupied by:Mover container:\"Board\" components:{\"Bomber\" \"Battleship\" \"Artillery\" \"Launcher\"}))",
        "AircraftAttackFrom": "(is In (from) (sites Occupied by:Mover container:\"Board\" components:{\"Antiair\" \"Fighter\"}))",
        "BoatAttackFrom": "(is In (from) (sites Occupied by:Mover container:\"Board\" components:{\"Submarine\"}))",
        "GroundAttackCheck": "(if (\"GroundAttackFrom\") (is In (to) (union (sites Occupied by:Enemy container:\"Board\" components:{\"Soldier\" \"Motorbike\" \"Tank\" \"Speeder\" \"Shooter\" \"Launcher\" \"Antiair\" \"Battleship\" \"Artillery\" \"Base\" \"Town\" \"Factory\" \"Dock\" \"Airport\" \"Cruiser\" \"Submarine\"}) (sites Occupied by:Neutral container:\"Board\"))) (is In (to) (union (sites Occupied by:Enemy container:\"Board\") (sites Occupied by:Neutral container:\"Board\"))) )",
        "BoatAttackCheck": "(if (\"BoatAttackFrom\") (is In (to) (sites Occupied by:Enemy container:\"Board\" components:{\"Submarine\" \"Battleship\" \"Cruiser\"})) (is In (to) (union (sites Occupied by:Enemy container:\"Board\") (sites Occupied by:Neutral container:\"Board\"))) )",
        "AircraftAttackCheck": "(if (\"AircraftAttackFrom\") (is In (to) (sites Occupied by:Enemy container:\"Board\" components:{\"Fighter\" \"Helicopter\" \"Bomber\"})) (is In (to) (union (sites Occupied by:Enemy container:\"Board\") (sites Occupied by:Neutral container:\"Board\"))) )",
        "CounterAttackCheckFrom": "(is In (#1) (sites Occupied #2 components:#3))",
        "GroundCounterAttackCheck": "(if (\"CounterAttackCheckFrom\" #1 #2 #5) (is In (#3) (union (sites Occupied #4 components:{\"Soldier\" \"Motorbike\" \"Tank\" \"Speeder\" \"Shooter\" \"Launcher\" \"Antiair\" \"Battleship\" \"Artillery\" \"Base\" \"Town\" \"Factory\" \"Dock\" \"Airport\" \"Cruiser\" \"Submarine\"}) (sites Occupied by:Neutral container:\"Board\"))) (is In (#3) (union (sites Occupied #4) (sites Occupied by:Neutral container:\"Board\"))) )",
        "BoatCounterAttackCheck": "(if (\"CounterAttackCheckFrom\" #1 #2 #5) (is In (#3) (sites Occupied #4 components:{\"Submarine\" \"Battleship\" \"Cruiser\"})) (is In (#3) (union (sites Occupied #4) (sites Occupied by:Neutral container:\"Board\"))) )",
        "AircraftCounterAttackCheck": "(if (\"CounterAttackCheckFrom\" #1 #2 #5) (is In (#3) (sites Occupied #4 components:{\"Fighter\" \"Helicopter\" \"Bomber\"})) (is In (#3) (union (sites Occupied #4) (sites Occupied by:Neutral container:\"Board\"))) )",
        "AttackMove": "(move Select (from (from) if:(> (state at:(from)) 0) ) (to (sites Distance Orthogonal from:(from) (range #1 #2)) if:(and { (\"GroundAttackCheck\") (\"AircraftAttackCheck\") (\"BoatAttackCheck\") <FogOfWar:AttackCheck> }) ) (then (do (and (set Value at:(last To) (max 0 (- (value Piece at:(last To)) (\"AttackerDamage\" (last From) (last To) False)))) (set State at:(last From) 0) ) next:(if (and (= 8 (state at:(last To))) (!= (mover) (who at:(last To)))) \"AttackBuilding\" (if (= (value Piece at:(last To)) 0) (remove (last To)) (if (and { (= 0 (count Sites in:(intersection (sites {(last To) (last From)}) (sites Occupied by:All components:{\"Launcher\" \"Artillery\" \"Battleship\" \"Antiair\"})))) (\"GroundCounterAttackCheck\" (last To) by:Enemy (last From) by:Mover {\"Bomber\" \"Battleship\" \"Artillery\" \"Launcher\"}) (\"AircraftCounterAttackCheck\" (last To) by:Enemy (last From) by:Mover {\"Antiair\" \"Fighter\"}) (\"BoatCounterAttackCheck\" (last To) by:Enemy (last From) by:Mover {\"Submarine\"}) }) (if (<= (- (value Piece at:(last From)) (\"AttackerDamage\" (last To) (last From) True)) 0) (remove (last From)) (set Value at:(last From) (- (value Piece at:(last From)) (\"AttackerDamage\" (last To) (last From) True))) ) (set Value at:(last From) (value Piece at:(last From))) ) ) ) ) ) )",
        "AttackerDamage": "(/ (* (if (is In (#2) \"AircraftSites\") (\"DamageMultiply\" (* (value Piece at:(#1)) 4) #1) (if (and (is In (#2) \"HumanSites\") (is In (#1) (sites Occupied by:All component:\"Shooter\")) ) (if (is In (#2) (sites \"Forest\")) (\"DamageMultiply\" (* (value Piece at:(#1)) 6) #1) (if (is In (#2) (union (sites \"ShallowWater\") (sites \"DeepWater\"))) (\"DamageMultiply\" (* (value Piece at:(#1)) 10) #1) (\"DamageMultiply\" (* (value Piece at:(#1)) 8) #1) ) ) (if (is In (#2) (sites \"Forest\")) (\"DamageMultiply\" (* (value Piece at:(#1)) 3) #1) (if (is In (#2) (union (sites \"ShallowWater\") (sites \"DeepWater\"))) (\"DamageMultiply\" (* (value Piece at:(#1)) 5) #1) (\"DamageMultiply\" (* (value Piece at:(#1)) 4) #1) ) ) ) ) (\"DoctrineMultiply\" #1 #2 #3) ) 128000 )",
        "DamageMultiply": "(max (/ (* #1 (mapEntry \"DamageMultiplier\" (what at:(#2)))) 100) 1)",
        "AttackBuilding": "(if (= (value Piece at:(last To)) 0) (and { (take Control of:All by:Mover at:(last To)) (set Value at:(last To) 50) }) (set Value at:(last To) (value Piece at:(last To))) )",
        "CloseCombatAttack": "(\"AttackMove\" 1 1)",
        "RangedAttack": "(\"AttackMove\" #1 #2)",
        "DoctrineMultiply": "(* { (if (is In (#1) \"HumanSites\") (\"GetDoctrineValue\" (who at:(#1)) 1) (if (is In (#1) \"DirectVehicleSites\") (\"GetDoctrineValue\" (who at:(#1)) 2) (if (is In (#1) \"RangedVehicleSites\") (\"GetDoctrineValue\" (who at:(#1)) 3) (if (is In (#1) \"AircraftSites\") (\"GetDoctrineValue\" (who at:(#1)) 4) (if (is In (#1) \"BoatSites\") (\"GetDoctrineValue\" (who at:(#1)) 5) 4 ) ) ) ) ) (if (and (= 8 (state at:(#2))) (!= (mover) (who at:(#2)))) (\"GetDoctrineValue\" (who at:(#1)) 6) 5 ) (if (> (who at:(#2)) 0) (\"GetDoctrineValue\" (who at:(#2)) 8) 4) (if #3 (\"GetDoctrineValue\" (who at:(#1)) 10) (\"GetDoctrineValue\" (who at:(#1)) 9)) (value Random (range (\"GetDoctrineValue\" (who at:(#1)) 11) (\"GetDoctrineValue\" (who at:(#1)) 12))) })",
        "HealMoveBuilding": "(move Select (from (from) if:(and (> (state at:(from)) 0) (< (value Piece at:(from)) (mapEntry \"MaxHealth\" (what at:(from)))) ) ) (to (sites Around (from) Orthogonal if:(is In (to) \"MoverBuildingSites\") ) ) (then (and { (set Value at:(last From) (min (mapEntry \"MaxHealth\" (what at:(last From))) (- (+ (value Piece at:(last From)) (value Piece at:(last To))) 1) ) ) (set Value at:(last To) (max (- (value Piece at:(last To)) (- (mapEntry \"MaxHealth\" (what at:(last From))) (value Piece at:(last From)))) 1 ) ) (set State at:(last From) 0) }) ) )",
        "HealMoveUnit": "(move Select (from (from) if:(> (state at:(from)) 0) ) (to (sites Around (from) Orthogonal if:(and (= (what at:(from)) (what at:(to))) (< (value Piece at:(to)) (mapEntry \"MaxHealth\" (what at:(to)))) ) ) ) (then (and { (if (<= (+ (value Piece at:(last To)) (value Piece at:(last From))) (mapEntry \"MaxHealth\" (what at:(last From)))) (and (set Value at:(last To) (min (mapEntry \"MaxHealth\" (what at:(last From))) (+ (value Piece at:(last From)) (value Piece at:(last To))) ) ) (remove (last From)) ) (and (set Value at:(last To) (min (mapEntry \"MaxHealth\" (what at:(last From))) (- (+ (value Piece at:(last From)) (value Piece at:(last To))) 1) ) ) (set Value at:(last From) (max (- (value Piece at:(last To)) (- (mapEntry \"MaxHealth\" (what at:(last From))) (value Piece at:(last From)))) 1 ) ) ) ) (set State at:(last From) 0) (set State at:(last To) 0) }) ) )",
        "BuyMove": "(forEach Site (sites Occupied by:Neutral container:1 #1) (move (from (site)) (to #2 if:(and (is Empty (to)) (<= (/ (* (count at:(site)) (\"GetDoctrineValue\" (mover) 7)) 4) (score Mover)) ) ) copy:True (then (and { (addScore Mover (- (/ (* (count at:(last From)) (\"GetDoctrineValue\" (mover) 7)) 4)) ) (take Control of:All by:Mover at:(last To)) (set State at:(last To) 0) }) ) ) )",
        "BuyHumanMove": "(\"BuyMove\" components:{\"Soldier\" \"Motorbike\"} (difference (sites Around (sites Occupied by:Mover component:\"Town\") Orthogonal) \"ForbiddenSpotsHuman\" ) )",
        "BuyVehicleMove": "(\"BuyMove\" components:{\"Speeder\" \"Shooter\" \"Tank\" \"Antiair\" \"Launcher\" \"Artillery\"} (difference (sites Around (sites Occupied by:Mover component:\"Factory\") Orthogonal) \"ForbiddenSpotsVehicle\" ) )",
        "BuyAircraftMove": "(\"BuyMove\" components:{\"Helicopter\" \"Fighter\" \"Bomber\"} (sites Around (sites Occupied by:Mover component:\"Airport\") Orthogonal) )",
        "BuyBoatMove": "(\"BuyMove\" components:{\"Cruiser\" \"Submarine\" \"Battleship\"} (difference (sites Around (sites Occupied by:Mover component:\"Dock\") Orthogonal) \"ForbiddenSpotsBoat\" ) )",
        "MoverBuildingSites": "(sites Occupied by:Mover container:\"Board\" components:{\"Town\" \"Dock\" \"Base\" \"Factory\" \"Airport\"})",
        "EnemyBuildingSites": "(union (sites Occupied by:Enemy container:\"Board\" components:{\"Town\" \"Dock\" \"Base\" \"Factory\" \"Airport\"}) (sites Occupied by:Neutral container:\"Board\" components:{\"Town\" \"Dock\" \"Base\" \"Factory\" \"Airport\"}))",
        "AircraftSites": "(sites Occupied by:All container:\"Board\" components:{\"Fighter\" \"Bomber\" \"Helicopter\"})",
        "RangedUnitSites": "(sites Occupied by:All container:\"Board\" components:{\"Launcher\" \"Artillery\" \"Battleship\" \"Antiair\"})",
        "HumanSites": "(sites Occupied by:All container:\"Board\" components:{\"Soldier\" \"Motorbike\"})",
        "BoatSites": "(sites Occupied by:All container:\"Board\" components:{\"Submarine\" \"Cruiser\" \"Battleship\"})",
        "DirectVehicleSites": "(sites Occupied by:All container:\"Board\" components:{\"Tank\" \"Speeder\" \"Shooter\"})",
        "RangedVehicleSites": "(sites Occupied by:All container:\"Board\" components:{\"Launcher\" \"Antiair\" \"Artillery\"})",
        "GetDoctrineValue": "(if (= #1 1) (mapEntry <Doctrine1:doctrine> #2) (if (= #1 2) (mapEntry <Doctrine2:doctrine> #2) (if (= #1 3) (mapEntry <Doctrine3:doctrine> #2) (if (= #1 4) (mapEntry <Doctrine4:doctrine> #2) 0 ) ) ) )",
        "TwoPlayerMaps": "(map \"Movement\" { (pair 1 8) (pair 2 8) (pair 3 8) (pair 4 8) (pair 5 8) (pair 6 8) (pair 7 8) (pair 8 8) (pair 9 8) (pair 10 8) (pair 11 4) (pair 12 4) (pair 13 6) (pair 14 6) (pair 15 7) (pair 16 7) (pair 17 5) (pair 18 5) (pair 19 5) (pair 20 5) (pair 21 5) (pair 22 5) (pair 23 4) (pair 24 4) (pair 25 4) (pair 26 4) (pair 27 5) (pair 28 5) (pair 29 7) (pair 30 7) (pair 31 6) (pair 32 6) (pair 33 6) (pair 34 6) (pair 35 6) (pair 36 6) (pair 37 5) (pair 38 5) (pair 39 8) (pair 40 8) (pair 41 8) (pair 42 8) (pair 43 8) })",
        "FourPlayerMaps": "(map \"Movement\" { (pair 1 8) (pair 2 8) (pair 3 8) (pair 4 8) (pair 5 8) (pair 6 8) (pair 7 8) (pair 8 8) (pair 9 8) (pair 10 8) (pair 11 8) (pair 12 8) (pair 13 8) (pair 14 8) (pair 15 8) (pair 16 8) (pair 17 8) (pair 18 8) (pair 19 8) (pair 20 8) (pair 21 4) (pair 22 4) (pair 23 4) (pair 24 4) (pair 25 6) (pair 26 6) (pair 27 6) (pair 28 6) (pair 29 7) (pair 30 7) (pair 31 7) (pair 32 7) (pair 33 5) (pair 34 5) (pair 35 5) (pair 36 5) (pair 37 5) (pair 38 5) (pair 39 5) (pair 40 5) (pair 41 5) (pair 42 5) (pair 43 5) (pair 44 5) (pair 45 4) (pair 46 4) (pair 47 4) (pair 48 4) (pair 49 4) (pair 50 4) (pair 51 4) (pair 52 4) (pair 53 5) (pair 54 5) (pair 55 5) (pair 56 5) (pair 57 7) (pair 58 7) (pair 59 7) (pair 60 7) (pair 61 6) (pair 62 6) (pair 63 6) (pair 64 6) (pair 65 6) (pair 66 6) (pair 67 6) (pair 68 6) (pair 69 6) (pair 70 6) (pair 71 6) (pair 72 6) (pair 73 5) (pair 74 5) (pair 75 5) (pair 76 5) (pair 77 8) (pair 78 8) (pair 79 8) (pair 80 8) (pair 81 8) })",
        "DoctrineSetup": "(map \"NoDoctrine\" { (pair 1 4) (pair 2 4) (pair 3 4) (pair 4 4) (pair 5 4) (pair 6 5) (pair 7 4) (pair 8 4) (pair 9 4) (pair 10 4) (pair 11 100) (pair 12 100) })",
        "ClearSites": "(difference (sites Board) \"HiddenSites\")",
        "HiddenSites": "(union {(sites \"Forest\") (sites \"Mountain\")})",
        "VisibilityRangeSites": "(union { (intersection (expand (forEach (players Friend of:(player)) (sites Occupied by:Player container:\"Board\")) steps:2) \"ClearSites\") (intersection (expand (forEach (players Friend of:(player)) (sites Occupied by:Player container:\"Board\")) steps:1) \"HiddenSites\") (intersection (expand (intersection (forEach (players Friend of:(player)) (sites Occupied by:Player container:\"Board\" components:{\"Soldier\" \"Motorbike\"})) (sites \"Mountain\")) steps:3) \"ClearSites\") (intersection (expand (forEach (players Friend of:(player)) (sites Occupied by:Player container:\"Board\" components:{\"Bomber\" \"Fighter\" \"Helicopter\"})) steps:3) \"ClearSites\") (intersection (expand (intersection (forEach (players Friend of:(player)) (sites Occupied by:Player container:\"Board\" components:{\"Submarine\" \"Battleship\" \"Cruiser\"})) (sites \"Mountain\")) steps:3) (union {(sites \"DeepWater\") (sites \"ShallowWater\")})) })",
        "HideSites": "(forEach Site (intersection (difference (sites Board) (\"VisibilityRangeSites\")) (difference (sites Board) (sites Hidden What to:#1))) (set Hidden {What State Value} at:(site) True to:#1) )",
        "ShowSites": "(forEach Site (intersection (\"VisibilityRangeSites\") (sites Hidden What to:#1)) (set Hidden {What State Value} at:(site) False to:#1) )",
        "FogOfWarEachMove": "(forEach Team (forEach (team) (\"HideSites\" Player)))",
        "FogOfWarAttackCheck": "(not (is In (to) (sites Hidden What to:Mover)))",
        "FogOfWarMetadata": "(region Colour (intersection (sites Board) (sites Hidden What to:Mover)) (colour 104 120 96))"
    },
    "game": "\"Mini Wars\" (players <Scenario:numPlayers>) (equipment { (board <Scenario:boardShape>) <Scenario:boardRegins> (hand Shared size:14) (piece \"Base\" Each) (piece \"Factory\" Each) (piece \"Town\" Each) (piece \"Airport\" Each) (piece \"Dock\" Each) (piece \"Soldier\" Each (or {\"HumanMove\" \"CloseCombatAttack\" \"HealMoveBuilding\" \"HealMoveUnit\"})) (piece \"Motorbike\" Each (or {\"HumanMove\" \"CloseCombatAttack\" \"HealMoveBuilding\" \"HealMoveUnit\"})) (piece \"Speeder\" Each (or {(\"VehicleMove\" 1) \"CloseCombatAttack\" \"HealMoveBuilding\" \"HealMoveUnit\"})) (piece \"Shooter\" Each (or {(\"VehicleMove\" 1) \"CloseCombatAttack\" \"HealMoveBuilding\" \"HealMoveUnit\"})) (piece \"Tank\" Each (or {(\"VehicleMove\" 1) \"CloseCombatAttack\" \"HealMoveBuilding\" \"HealMoveUnit\"})) (piece \"Antiair\" Each (or {(\"VehicleMove\" 1) (\"RangedAttack\" 1 2) \"HealMoveBuilding\" \"HealMoveUnit\"})) (piece \"Launcher\" Each (or {(\"VehicleMove\" 1) (\"RangedAttack\" 2 3) \"HealMoveBuilding\" \"HealMoveUnit\"})) (piece \"Artillery\" Each (or {(\"VehicleMove\" 0) (\"RangedAttack\" 3 5) \"HealMoveBuilding\" \"HealMoveUnit\"})) (piece \"Helicopter\" Each (or {\"AircraftMove\" \"CloseCombatAttack\" \"HealMoveBuilding\" \"HealMoveUnit\"})) (piece \"Fighter\" Each (or {\"AircraftMove\" \"CloseCombatAttack\" \"HealMoveBuilding\" \"HealMoveUnit\"})) (piece \"Bomber\" Each (or {\"AircraftMove\" \"CloseCombatAttack\" \"HealMoveBuilding\" \"HealMoveUnit\"})) (piece \"Cruiser\" Each (or {\"BoatMove\" \"CloseCombatAttack\" \"HealMoveBuilding\" \"HealMoveUnit\"})) (piece \"Submarine\" Each (or {\"BoatMove\" \"CloseCombatAttack\" \"HealMoveBuilding\" \"HealMoveUnit\"})) (piece \"Battleship\" Each (or {\"BoatMove\" (\"RangedAttack\" 2 4) \"HealMoveBuilding\" \"HealMoveUnit\"})) (piece \"Base\" Neutral) (piece \"Factory\" Neutral) (piece \"Town\" Neutral) (piece \"Airport\" Neutral) (piece \"Dock\" Neutral) (piece \"Soldier\" Neutral) (piece \"Motorbike\" Neutral) (piece \"Speeder\" Neutral) (piece \"Shooter\" Neutral) (piece \"Tank\" Neutral) (piece \"Antiair\" Neutral) (piece \"Launcher\" Neutral) (piece \"Artillery\" Neutral) (piece \"Helicopter\" Neutral) (piece \"Fighter\" Neutral) (piece \"Bomber\" Neutral) (piece \"Cruiser\" Neutral) (piece \"Submarine\" Neutral) (piece \"Battleship\" Neutral) <Scenario:playerMaps> \"DoctrineSetup\" }) (rules (meta (passEnd NoEnd)) (start { <Scenario:buildingSetup> <Scenario:pieceSetup> <Scenario:teams> (set Score Each <Scenario:startingMoney>) (place \"Soldier0\" (handSite Shared 0) count:30 state:1 value:30) (place \"Motorbike0\" (handSite Shared 1) count:50 state:1 value:40) (place \"Speeder0\" (handSite Shared 2) count:60 state:1 value:60) (place \"Shooter0\" (handSite Shared 3) count:80 state:1 value:60) (place \"Tank0\" (handSite Shared 4) count:100 state:1 value:80) (place \"Antiair0\" (handSite Shared 5) count:80 state:1 value:50) (place \"Launcher0\" (handSite Shared 6) count:80 state:1 value:50) (place \"Artillery0\" (handSite Shared 7) count:100 state:1 value:40) (place \"Helicopter0\" (handSite Shared 8) count:60 state:1 value:40) (place \"Fighter0\" (handSite Shared 9) count:100 state:1 value:100) (place \"Bomber0\" (handSite Shared 10) count:120 state:1 value:100) (place \"Cruiser0\" (handSite Shared 11) count:60 state:1 value:70) (place \"Submarine0\" (handSite Shared 12) count:100 state:1 value:100) (place \"Battleship0\" (handSite Shared 13) count:120 state:1 value:120) <FogOfWar:EachMove> }) (play (or (or { (forEach Piece) (\"BuyHumanMove\") (\"BuyBoatMove\") (\"BuyAircraftMove\") (\"BuyVehicleMove\") } (then (and { (forEach Player (\"RemovePiecesIfPlayerHasLost\" Player) ) (moveAgain) (and {<FogOfWar:EachMove>}) }) ) ) (move Pass (then (and { (forEach Site (sites Occupied by:Mover container:\"Board\") (set State at:(site) (mapEntry \"Movement\" (what at:(site)))) ) (set Score Mover (+ { (* (count Sites in:(sites Occupied by:Mover component:\"Base\")) 20) (* (count Sites in:(sites Occupied by:Mover component:\"Town\")) 10) (score Mover) }) ) (forEach Site (sites Occupied by:Mover components:{\"Town\" \"Base\" \"Factory\" \"Dock\" \"Airport\"}) (set Value at:(site) (min (mapEntry \"MaxHealth\" (what at:(site))) (+ (value Piece at:(site)) 10))) ) (and {<FogOfWar:EachMove>}) }) ) ) ) ) (end (forEach NonMover if:(\"IsOffBoard\" (where \"Base\" Player)) (result Player Loss) ) ) )",
    "option": {
        "Scenario": {
            "arguments": "<playerMaps> <numPlayers> <boardShape> <boardRegins> <buildingSetup> <pieceSetup> <startingMoney> <teams> <pieceFlip> <terrainScale>",
            "items": {}
        },
        "Fog of War": {
            "arguments": "<AttackCheck> <EachMove> <Metadata>",
            "items": {
                "Off": {
                    "content": "> <> <",
                    "description": "No Fog of War."
                },
                "On": {
                    "content": "\"FogOfWarAttackCheck\"> <\"FogOfWarEachMove\"> <\"FogOfWarMetadata\"",
                    "description": "Fog of War."
                }
            }
        },
        "Player 1 Doctrine": {
            "arguments": "<doctrine>",
            "items": {
                "None": {
                    "content": "\"NoDoctrine\"",
                    "description": "Player 1 - No Doctrine."
                },
                "Special Forces": {
                    "content": "\"SpecialForces\"",
                    "description": "Player 1 - Special Forces."
                },
                "Brute Strength": {
                    "content": "\"BruteStrength\"",
                    "description": "Player 1 - Brute Strength."
                },
                "Sharpshooter": {
                    "content": "\"Sharpshooter\"",
                    "description": "Player 1 - Sharpshooter."
                },
                "Ace Pilot": {
                    "content": "\"AcePilot\"",
                    "description": "Player 1 - Ace Pilot."
                },
                "Sea Dog": {
                    "content": "\"SeaDog\"",
                    "description": "Player 1 - Sea Dog."
                },
                "Guerrilla Warfare": {
                    "content": "\"GuerrillaWarfare\"",
                    "description": "Player 1 - Guerrilla Warfare."
                },
                "Foreign Invader": {
                    "content": "\"ForeignInvader\"",
                    "description": "Player 1 - Foreign Invader."
                },
                "Conscription": {
                    "content": "\"Conscription\"",
                    "description": "Player 1 - Conscription."
                },
                "Elite Training": {
                    "content": "\"EliteTraining\"",
                    "description": "Player 1 - Elite Training."
                },
                "Glass Cannon": {
                    "content": "\"GlassCannon\"",
                    "description": "Player 1 - Glass Cannon."
                },
                "Hardened Resolve": {
                    "content": "\"HardenedResolve\"",
                    "description": "Player 1 - Hardened Resolve."
                },
                "Preemptive Strike": {
                    "content": "\"PreemptiveStrike\"",
                    "description": "Player 1 - Preemptive Strike."
                },
                "Retaliation": {
                    "content": "\"Retaliation\"",
                    "description": "Player 1 - Retaliation."
                },
                "Lady Luck": {
                    "content": "\"LadyLuck\"",
                    "description": "Player 1 - Lady Luck."
                }
            }
        },
        "Player 2 Doctrine": {
            "arguments": "<doctrine>",
            "items": {
                "None": {
                    "content": "\"NoDoctrine\"",
                    "description": "Player 2 - No Doctrine."
                },
                "Special Forces": {
                    "content": "\"SpecialForces\"",
                    "description": "Player 2 - Special Forces."
                },
                "Brute Strength": {
                    "content": "\"BruteStrength\"",
                    "description": "Player 2 - Brute Strength."
                },
                "Sharpshooter": {
                    "content": "\"Sharpshooter\"",
                    "description": "Player 2 - Sharpshooter."
                },
                "Ace Pilot": {
                    "content": "\"AcePilot\"",
                    "description": "Player 2 - Ace Pilot."
                },
                "Sea Dog": {
                    "content": "\"SeaDog\"",
                    "description": "Player 2 - Sea Dog."
                },
                "Guerrilla Warfare": {
                    "content": "\"GuerrillaWarfare\"",
                    "description": "Player 2 - Guerrilla Warfare."
                },
                "Foreign Invader": {
                    "content": "\"ForeignInvader\"",
                    "description": "Player 2 - Foreign Invader."
                },
                "Conscription": {
                    "content": "\"Conscription\"",
                    "description": "Player 2 - Conscription."
                },
                "Elite Training": {
                    "content": "\"EliteTraining\"",
                    "description": "Player 2 - Elite Training."
                },
                "Glass Cannon": {
                    "content": "\"GlassCannon\"",
                    "description": "Player 2 - Glass Cannon."
                },
                "Hardened Resolve": {
                    "content": "\"HardenedResolve\"",
                    "description": "Player 2 - Hardened Resolve."
                },
                "Preemptive Strike": {
                    "content": "\"PreemptiveStrike\"",
                    "description": "Player 2 - Preemptive Strike."
                },
                "Retaliation": {
                    "content": "\"Retaliation\"",
                    "description": "Player 2 - Retaliation."
                },
                "Lady Luck": {
                    "content": "\"LadyLuck\"",
                    "description": "Player 2 - Lady Luck."
                }
            }
        },
        "Player 3 Doctrine": {
            "arguments": "<doctrine>",
            "items": {
                "None": {
                    "content": "\"NoDoctrine\"",
                    "description": "Player 3 - No Doctrine."
                },
                "Special Forces": {
                    "content": "\"SpecialForces\"",
                    "description": "Player 3 - Special Forces."
                },
                "Brute Strength": {
                    "content": "\"BruteStrength\"",
                    "description": "Player 3 - Brute Strength."
                },
                "Sharpshooter": {
                    "content": "\"Sharpshooter\"",
                    "description": "Player 3 - Sharpshooter."
                },
                "Ace Pilot": {
                    "content": "\"AcePilot\"",
                    "description": "Player 3 - Ace Pilot."
                },
                "Sea Dog": {
                    "content": "\"SeaDog\"",
                    "description": "Player 3 - Sea Dog."
                },
                "Guerrilla Warfare": {
                    "content": "\"GuerrillaWarfare\"",
                    "description": "Player 3 - Guerrilla Warfare."
                },
                "Foreign Invader": {
                    "content": "\"ForeignInvader\"",
                    "description": "Player 3 - Foreign Invader."
                },
                "Conscription": {
                    "content": "\"Conscription\"",
                    "description": "Player 3 - Conscription."
                },
                "Elite Training": {
                    "content": "\"EliteTraining\"",
                    "description": "Player 3 - Elite Training."
                },
                "Glass Cannon": {
                    "content": "\"GlassCannon\"",
                    "description": "Player 3 - Glass Cannon."
                },
                "Hardened Resolve": {
                    "content": "\"HardenedResolve\"",
                    "description": "Player 3 - Hardened Resolve."
                },
                "Preemptive Strike": {
                    "content": "\"PreemptiveStrike\"",
                    "description": "Player 3 - Preemptive Strike."
                },
                "Retaliation": {
                    "content": "\"Retaliation\"",
                    "description": "Player 3 - Retaliation."
                },
                "Lady Luck": {
                    "content": "\"LadyLuck\"",
                    "description": "Player 3 - Lady Luck."
                }
            }
        },
        "Player 4 Doctrine": {
            "arguments": "<doctrine>",
            "items": {
                "None": {
                    "content": "\"NoDoctrine\"",
                    "description": "Player 4 - No Doctrine."
                },
                "Special Forces": {
                    "content": "\"SpecialForces\"",
                    "description": "Player 4 - Special Forces."
                },
                "Brute Strength": {
                    "content": "\"BruteStrength\"",
                    "description": "Player 4 - Brute Strength."
                },
                "Sharpshooter": {
                    "content": "\"Sharpshooter\"",
                    "description": "Player 4 - Sharpshooter."
                },
                "Ace Pilot": {
                    "content": "\"AcePilot\"",
                    "description": "Player 4 - Ace Pilot."
                },
                "Sea Dog": {
                    "content": "\"SeaDog\"",
                    "description": "Player 4 - Sea Dog."
                },
                "Guerrilla Warfare": {
                    "content": "\"GuerrillaWarfare\"",
                    "description": "Player 4 - Guerrilla Warfare."
                },
                "Foreign Invader": {
                    "content": "\"ForeignInvader\"",
                    "description": "Player 4 - Foreign Invader."
                },
                "Conscription": {
                    "content": "\"Conscription\"",
                    "description": "Player 4 - Conscription."
                },
                "Elite Training": {
                    "content": "\"EliteTraining\"",
                    "description": "Player 4 - Elite Training."
                },
                "Glass Cannon": {
                    "content": "\"GlassCannon\"",
                    "description": "Player 4 - Glass Cannon."
                },
                "Hardened Resolve": {
                    "content": "\"HardenedResolve\"",
                    "description": "Player 4 - Hardened Resolve."
                },
                "Preemptive Strike": {
                    "content": "\"PreemptiveStrike\"",
                    "description": "Player 4 - Preemptive Strike."
                },
                "Retaliation": {
                    "content": "\"Retaliation\"",
                    "description": "Player 4 - Retaliation."
                },
                "Lady Luck": {
                    "content": "\"LadyLuck\"",
                    "description": "Player 4 - Lady Luck."
                }
            }
        }
    },
    "rulesets": {},
    "metadata": "(info { (description \"Mini Wars is a simplified tabletop war game.\") (rules \""
}